-------------------------------
INTRODUCTION
-------------------------------

The Heat Map Generator finds and visualizes hot spots within your data. This 
could be mapping concentrated areas of cell phone activity, places of high 
population density, or the likeliest kill points in a first-person shooter. 

This package contains three functions: 

1. The heat_map function processes your data, and outputs a histogram or heat 
map bins of high density locations.

2. The heat_map_image function uses the output from heat_map to generate an 
image file. 

3. A demonstration python program that takes heat map output and overlays your data over Google maps.

-------------------------------
BUILDING
-------------------------------

To build:

$ make

-------------------------------
INSTALLING / UNINSTALLING
-------------------------------

Assuming vsql is in your path, just do:

$ make install
$ make uninstall

Alternately, you can find the DDL that 'make install' uses in:
 src/ddl/install.sql 
and
 src/ddl/uninstall.sql

-------------------------------
USAGE
-------------------------------

1. heat_map(x,y)

Required input: 
	x, y - The required data columns.

Optional input: 
	xbins, ybins - The number of horizontal and vertical bins.
	normalize  - Leave the data as a raw count, or normalize it (0-4). 
		   0 - No normalization (default)
		   1 - Normalizes by dividing by max count, all weights will
		        be between 0 and 1
		   2 - Normalizes by dividing by max count and makes sum of 
		        bin weights total to 1
		   3 - Normalizes by dividing by the range of max and min counts
	gaussian - Turn Gaussian blur (smoothing) on or off in the heatmap. 
	bounding_box - Turn on the bounding box coordinates in output

Output: 
	Heat Map Histogram, or heat map bins.
	Each bin is output as a single row with:
	     x, y - the top left corner of the bin
	     x_t, y_t - (optional; see bounding_box param) the bottom 
	     	         right corner of the bin
	     c - the count/weight of the bin

2. heat_map_image(x,y,c)

	Required input: 
		x, y - The required data columns.
		c - The count, or weight.

	Optional input: 
		file_in - The background image used (PNG only). (Partially implemented)
		file_out - The location for the image output.
		gaussian - Turn image level Gaussian smoothing

	Output: 
		The image file (in png format)
		The red green blue alpha info (r, b, g, a). (Partially implemented)

3. gmaps.py

	Required input: 
		x, y - The required data columns.
		x_t, y_t - The bounding box
		c - The count, or weight.
	Input Format: (equivalent to output of heat_map())
	x | y | x_t | y_t | c 

	Output: 
		HTML file.


See the examples file for samples of usage.

-------------------------------
PERFORMANCE
-------------------------------

No performance metrics.

-------------------------------
LICENSE
-------------------------------

Please see LICENSE.txt